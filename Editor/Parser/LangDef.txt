EBNF

definition	=
concatenation	,
termination	;
alternation	|
optional	[ ... ] - zero or one
repetition	{ ... } - zero or more
grouping	( ... )
terminal string	" ... "
terminal string	' ... '
comment	(* ... *)
special sequence	? ... ?
exception	-

String =        ? anything ?
Character =     ? A-Za-z ?

BracketOpen =   '['
BracketClose =  ']'
Pipe =          '|'
Space =         ' '
Newline =       '\n'
Escape =        '\'
Dot =           '.'
QuestionMark =  '?'
Number =        '0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'

Decimal =       { Number } , Dot , { Number }
Idenitifer =    Character , { Number | Character }
Value =         Number | Decimal | ( String - ( Whitespace | Pipe | BracketClose ) )
Whitespace =    { Space | Newline }

ConcatAll = { EvalBlock | TextBlock | ConcatAll }

TextBlock = { String | Newline }

EvalBlock = BracketOpen , FuncBlock , [ FuncArgs ] , [ ResultArgs ] , BracketClose

FuncBlock = Whitespace , Idenitifer , { Dot , Idenitifer } , [ QuestionMark ]

FuncArgs = { Whitespace , Value }

ResultArgs = Whitespace , { Pipe , ResultConcat }

ResultConcat = { ( EvalBlock | TextBlock | ResultConcat ) , { Newline } }


